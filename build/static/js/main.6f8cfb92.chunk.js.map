{"version":3,"sources":["components/RegistrationForm/RegistrationForm.jsx","App.js","index.js"],"names":["RegistrationForm","onSubmit","validateCPF","useState","name","setName","lastName","setLastName","cpf","setCPF","promotions","setPromotions","news","setNews","errorCPF","isValid","textCPF","errors","setErrors","event","preventDefault","TextField","value","onChange","target","id","label","variant","fullWidth","margin","onBlur","values","helperText","error","FormControlLabel","control","Switch","checked","color","Button","type","onSubmitForm","data","console","log","length","App","Container","maxWidth","component","Typography","align","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4QA8FeA,MA3Ff,YAAsD,IAA1BC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,YAAe,EAC3BC,mBAAS,IADkB,mBAC5CC,EAD4C,KACtCC,EADsC,OAEnBF,mBAAS,IAFU,mBAE5CG,EAF4C,KAElCC,EAFkC,OAG7BJ,mBAAS,IAHoB,mBAG5CK,EAH4C,KAGvCC,EAHuC,OAIfN,oBAAS,GAJM,mBAI5CO,EAJ4C,KAIhCC,EAJgC,OAK3BR,oBAAS,GALkB,mBAK5CS,EAL4C,KAKtCC,EALsC,OAMvBV,mBAAS,CACnCW,SAAU,CAAEC,SAAS,EAAOC,QAAS,MAPY,mBAM5CC,EAN4C,KAMpCC,EANoC,KAUnD,OACE,0BACEjB,SAAU,SAACkB,GACTA,EAAMC,iBACNnB,EAAS,CAAEG,OAAME,WAAUE,MAAKE,aAAYE,WAG9C,kBAACS,EAAA,EAAD,CACEC,MAAOlB,EACPmB,SAAU,SAACJ,GACTd,EAAQc,EAAMK,OAAOF,QAEvBG,GAAG,OACHC,MAAM,OACNC,QAAQ,WACRC,WAAW,EACXC,OAAO,WAET,kBAACR,EAAA,EAAD,CACEC,MAAOhB,EACPiB,SAAU,SAACJ,GACTZ,EAAYY,EAAMK,OAAOF,QAE3BG,GAAG,YACHC,MAAM,YACNC,QAAQ,WACRC,WAAW,EACXC,OAAO,WAET,kBAACR,EAAA,EAAD,CACEC,MAAOd,EACPe,SAAU,SAACJ,GACTV,EAAOU,EAAMK,OAAOF,QAEtBQ,OAAQ,SAACX,GACP,IAAMY,EAAS7B,EAAYiB,EAAMK,OAAOF,OACxCJ,EAAU,CAAEJ,SAAUiB,KAExBC,WAAYf,EAAOH,SAASE,QAC5BiB,MAAOhB,EAAOH,SAASC,QACvBU,GAAG,MACHC,MAAM,MACNC,QAAQ,WACRC,WAAW,EACXC,OAAO,WAGT,kBAACK,EAAA,EAAD,CACEC,QACE,kBAACC,EAAA,EAAD,CACEC,QAAS3B,EACTa,SAAU,SAACJ,GACTR,EAAcQ,EAAMK,OAAOa,UAE7BjC,KAAK,kBACLkC,MAAM,YAGVZ,MAAM,oBAER,kBAACQ,EAAA,EAAD,CACEC,QACE,kBAACC,EAAA,EAAD,CACEC,QAASzB,EACTW,SAAU,SAACJ,GACTN,EAAQM,EAAMK,OAAOa,UAEvBjC,KAAK,YACLkC,MAAM,YAGVZ,MAAM,cAGR,kBAACa,EAAA,EAAD,CAAQC,KAAK,SAASb,QAAQ,YAAYW,MAAM,WAAhD,e,sBCrEN,IAAMG,EAAe,SAACC,GAAD,OAAUC,QAAQC,IAAIF,IACrCxC,EAAc,SAACM,GACnB,OAAmB,KAAfA,EAAIqC,OACC,CAAE9B,SAAS,EAAMC,QAAS,kCACrB,CAAED,SAAS,EAAOC,QAAS,KAG5B8B,EAnBf,WACE,OACE,kBAACC,EAAA,EAAD,CAAWC,SAAS,KAAKC,UAAU,WACjC,kBAACC,EAAA,EAAD,CAAYvB,QAAQ,KAAKsB,UAAU,KAAKE,MAAM,UAA9C,6BAIA,kBAAC,EAAD,CAAkBlD,SAAUwC,EAAcvC,YAAaA,MCP7DkD,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.6f8cfb92.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Button, Switch, TextField, FormControlLabel } from \"@material-ui/core\";\r\n\r\nfunction RegistrationForm({ onSubmit, validateCPF }) {\r\n  const [name, setName] = useState(\"\"); // guarda informações de um componente, usar um estado e ele ser gerenciado pelo react internamente\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [cpf, setCPF] = useState(\"\");\r\n  const [promotions, setPromotions] = useState(true);\r\n  const [news, setNews] = useState(true);\r\n  const [errors, setErrors] = useState({\r\n    errorCPF: { isValid: false, textCPF: \"\" },\r\n  });\r\n\r\n  return (\r\n    <form\r\n      onSubmit={(event) => {\r\n        event.preventDefault();\r\n        onSubmit({ name, lastName, cpf, promotions, news });\r\n      }}\r\n    >\r\n      <TextField\r\n        value={name}\r\n        onChange={(event) => {\r\n          setName(event.target.value); // Atribuindo ao estado o valor do input\r\n        }}\r\n        id=\"name\"\r\n        label=\"Nome\"\r\n        variant=\"outlined\"\r\n        fullWidth={true}\r\n        margin=\"normal\"\r\n      />\r\n      <TextField\r\n        value={lastName}\r\n        onChange={(event) => {\r\n          setLastName(event.target.value); // pega o evento de onchange e atribui ao estado de lastName\r\n        }}\r\n        id=\"last-name\"\r\n        label=\"Sobrenome\"\r\n        variant=\"outlined\"\r\n        fullWidth={true}\r\n        margin=\"normal\"\r\n      />\r\n      <TextField\r\n        value={cpf}\r\n        onChange={(event) => {\r\n          setCPF(event.target.value);\r\n        }}\r\n        onBlur={(event) => {\r\n          const values = validateCPF(event.target.value);\r\n          setErrors({ errorCPF: values });\r\n        }}\r\n        helperText={errors.errorCPF.textCPF}\r\n        error={errors.errorCPF.isValid}\r\n        id=\"cpf\"\r\n        label=\"CPF\"\r\n        variant=\"outlined\"\r\n        fullWidth={true}\r\n        margin=\"normal\"\r\n      />\r\n\r\n      <FormControlLabel\r\n        control={\r\n          <Switch\r\n            checked={promotions}\r\n            onChange={(event) => {\r\n              setPromotions(event.target.checked);\r\n            }}\r\n            name=\"Promoções\"\r\n            color=\"primary\"\r\n          />\r\n        }\r\n        label=\"Promoções\"\r\n      />\r\n      <FormControlLabel\r\n        control={\r\n          <Switch\r\n            checked={news}\r\n            onChange={(event) => {\r\n              setNews(event.target.checked);\r\n            }}\r\n            name=\"Novidades\"\r\n            color=\"primary\"\r\n          />\r\n        }\r\n        label=\"Novidades\"\r\n      />\r\n\r\n      <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n        Cadastrar\r\n      </Button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default RegistrationForm;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport RegistrationForm from \"./components/RegistrationForm/RegistrationForm\";\nimport { Container, Typography } from \"@material-ui/core\";\nimport \"fontsource-roboto\";\n\nfunction App() {\n  return (\n    <Container maxWidth=\"sm\" component=\"article\">\n      <Typography variant=\"h3\" component=\"h1\" align=\"center\">\n        Formulário de cadastro\n      </Typography>\n\n      <RegistrationForm onSubmit={onSubmitForm} validateCPF={validateCPF} />\n    </Container>\n  );\n}\n\nconst onSubmitForm = (data) => console.log(data); // Utilizei console.log apenas para simplificar o projeto\nconst validateCPF = (cpf) => {\n  if (cpf.length !== 11) {\n    return { isValid: true, textCPF: \"CPF deve conter 11 números.\" };\n  } else return { isValid: false, textCPF: \"\" };\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}